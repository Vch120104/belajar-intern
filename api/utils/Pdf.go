package utils

import (
	"bytes"

	"github.com/go-pdf/fpdf"
)

// CreatePdf creates a pdf file
func GeneratePDFGatePass(data map[string]string) ([]byte, error) {
	pdf := fpdf.New("P", "mm", "A4", "")
	pdf.SetMargins(10, 10, 10)
	pdf.AddPage()

	pdf.SetFont("Arial", "B", 18)
	pdf.Cell(190, 10, "GATE PASS")
	pdf.Ln(10)

	pdf.SetFont("Arial", "B", 12)
	pdf.Cell(190, 7, "Workshop Indomobil Trada Nasional - Bekasi")
	pdf.Ln(10)

	// Generate content dynamically
	for key, value := range data {
		pdf.SetFont("Arial", "B", 12)
		pdf.CellFormat(50, 8, key+":", "", 0, "L", false, 0, "")
		pdf.SetFont("Arial", "", 12)
		pdf.CellFormat(0, 8, value, "", 1, "L", false, 0, "")
		pdf.Ln(2)
	}

	pdf.SetY(-30)
	pdf.SetFont("Arial", "I", 10)
	pdf.Cell(0, 10, "Generated by Gate Pass System")

	var buf bytes.Buffer
	err := pdf.Output(&buf)
	if err != nil {
		return nil, err
	}
	return buf.Bytes(), nil
}
